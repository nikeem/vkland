{"version":3,"sources":["../../../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["import { classNames } from '@vkontakte/vkjs';\nimport { ImageBase, type ImageBaseProps } from '../ImageBase/ImageBase';\nimport {\n  ImageBaseOverlay,\n  type ImageBaseOverlayProps,\n} from '../ImageBase/ImageBaseOverlay/ImageBaseOverlay';\nimport { AvatarBadge, type AvatarBadgeProps } from './AvatarBadge/AvatarBadge';\nimport {\n  AvatarBadgeWithPreset,\n  type AvatarBadgeWithPresetProps,\n} from './AvatarBadge/AvatarBadgeWithPreset';\nimport { getInitialsFontSize } from './helpers';\nimport styles from './Avatar.module.css';\n\nexport type {\n  AvatarBadgeProps,\n  AvatarBadgeWithPresetProps,\n  ImageBaseOverlayProps as AvatarOverlayProps,\n};\n\nconst AVATAR_DEFAULT_SIZE = 48;\n\nconst COLORS_NUMBER_TO_TEXT_MAP = {\n  1: 'red',\n  2: 'orange',\n  3: 'yellow',\n  4: 'green',\n  5: 'l-blue',\n  6: 'violet',\n} as const;\n\n/**\n * Градиенты, которые можно использовать в алгоритме поиска градиентов по числовому идентификатору пользователя.\n * @example user.id % 6 + 1\n */\nexport type InitialsAvatarNumberGradients = keyof typeof COLORS_NUMBER_TO_TEXT_MAP;\n\nexport type InitialsAvatarTextGradients =\n  | (typeof COLORS_NUMBER_TO_TEXT_MAP)[InitialsAvatarNumberGradients]\n  | 'blue';\n\nconst gradientStyles = {\n  'red': styles.gradientRed,\n  'orange': styles.gradientOrange,\n  'yellow': styles.gradientYellow,\n  'green': styles.gradientGreen,\n  'blue': styles.gradientBlue,\n  'l-blue': styles.gradientLBlue,\n  'violet': styles.gradientViolet,\n};\n\nexport interface AvatarProps extends Omit<ImageBaseProps, 'widthSize' | 'heightSize'> {\n  /**\n   * Инициалы пользователя.\n   *\n   * > Note: Если аватарка не прогрузится, то пользователь увидит инициалы.\n   *\n   * > ⚠️ Перебивает `fallbackIcon`.\n   */\n  initials?: string;\n  /**\n   * Задаёт градиент для фона.\n   *\n   * Если передано число, то оно будет сконвертировано в строчное представление цвета по следующей схеме:\n   *\n   * 1: 'red'\n   * 2: 'orange'\n   * 3: 'yellow'\n   * 4: 'green'\n   * 5: 'l-blue'\n   * 6: 'violet'\n   *\n   * > Если необходимо задать свой градиент, то используйте значение `\"custom\"` и определите цвет градиента либо через\n   * > свой класс в `className`, либо через `style={{ backgroundImage: \"...\" }}`.\n   */\n  gradientColor?: InitialsAvatarNumberGradients | InitialsAvatarTextGradients | 'custom';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Avatar\n */\nexport const Avatar: React.FC<AvatarProps> & {\n  Badge: typeof AvatarBadge;\n  BadgeWithPreset: typeof AvatarBadgeWithPreset;\n  Overlay: typeof ImageBase.Overlay;\n  getInitialsFontSize: typeof getInitialsFontSize;\n} = ({\n  size = AVATAR_DEFAULT_SIZE,\n  className,\n  gradientColor,\n  initials,\n  fallbackIcon: fallbackIconProp,\n  children,\n  ...restProps\n}: AvatarProps) => {\n  const gradientName =\n    typeof gradientColor === 'number' ? COLORS_NUMBER_TO_TEXT_MAP[gradientColor] : gradientColor;\n  const isGradientNotCustom = gradientName && gradientName !== 'custom';\n\n  const fallbackIcon = initials ? (\n    <div\n      className={styles.initials}\n      style={{\n        fontSize: getInitialsFontSize(size),\n      }}\n    >\n      {initials}\n    </div>\n  ) : (\n    fallbackIconProp\n  );\n\n  return (\n    <ImageBase\n      {...restProps}\n      size={size}\n      fallbackIcon={fallbackIcon}\n      className={classNames(\n        styles.host,\n        gradientName && styles.hasGradient,\n        isGradientNotCustom && gradientStyles[gradientName],\n        className,\n      )}\n    >\n      {children}\n    </ImageBase>\n  );\n};\n\nAvatar.displayName = 'Avatar';\n\nAvatar.Badge = AvatarBadge;\nAvatar.Badge.displayName = 'Avatar.Badge';\n\nAvatar.BadgeWithPreset = AvatarBadgeWithPreset;\nAvatar.BadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';\n\nAvatar.Overlay = ImageBaseOverlay;\nAvatar.Overlay.displayName = 'Avatar.Overlay';\n\nAvatar.getInitialsFontSize = getInitialsFontSize;\n"],"names":["classNames","ImageBase","ImageBaseOverlay","AvatarBadge","AvatarBadgeWithPreset","getInitialsFontSize","styles","AVATAR_DEFAULT_SIZE","COLORS_NUMBER_TO_TEXT_MAP","gradientStyles","gradientRed","gradientOrange","gradientYellow","gradientGreen","gradientBlue","gradientLBlue","gradientViolet","Avatar","size","className","gradientColor","initials","fallbackIcon","fallbackIconProp","children","restProps","gradientName","isGradientNotCustom","div","style","fontSize","host","hasGradient","displayName","Badge","BadgeWithPreset","Overlay"],"mappings":";AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAA6B,4BAAyB;AACxE,SACEC,gBAAgB,QAEX,oDAAiD;AACxD,SAASC,WAAW,QAA+B,+BAA4B;AAC/E,SACEC,qBAAqB,QAEhB,yCAAsC;AAC7C,SAASC,mBAAmB,QAAQ,eAAY;AAChD,OAAOC,YAAY,sBAAsB;AAQzC,MAAMC,sBAAsB;AAE5B,MAAMC,4BAA4B;IAChC,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAYA,MAAMC,iBAAiB;IACrB,OAAOH,OAAOI,WAAW;IACzB,UAAUJ,OAAOK,cAAc;IAC/B,UAAUL,OAAOM,cAAc;IAC/B,SAASN,OAAOO,aAAa;IAC7B,QAAQP,OAAOQ,YAAY;IAC3B,UAAUR,OAAOS,aAAa;IAC9B,UAAUT,OAAOU,cAAc;AACjC;AA6BA;;CAEC,GACD,OAAO,MAAMC,SAKT,CAAC,EACHC,OAAOX,mBAAmB,EAC1BY,SAAS,EACTC,aAAa,EACbC,QAAQ,EACRC,cAAcC,gBAAgB,EAC9BC,QAAQ,EACR,GAAGC,WACS;IACZ,MAAMC,eACJ,OAAON,kBAAkB,WAAWZ,yBAAyB,CAACY,cAAc,GAAGA;IACjF,MAAMO,sBAAsBD,gBAAgBA,iBAAiB;IAE7D,MAAMJ,eAAeD,yBACnB,KAACO;QACCT,WAAWb,OAAOe,QAAQ;QAC1BQ,OAAO;YACLC,UAAUzB,oBAAoBa;QAChC;kBAECG;SAGHE;IAGF,qBACE,KAACtB;QACE,GAAGwB,SAAS;QACbP,MAAMA;QACNI,cAAcA;QACdH,WAAWnB,WACTM,OAAOyB,IAAI,EACXL,gBAAgBpB,OAAO0B,WAAW,EAClCL,uBAAuBlB,cAAc,CAACiB,aAAa,EACnDP;kBAGDK;;AAGP,EAAE;AAEFP,OAAOgB,WAAW,GAAG;AAErBhB,OAAOiB,KAAK,GAAG/B;AACfc,OAAOiB,KAAK,CAACD,WAAW,GAAG;AAE3BhB,OAAOkB,eAAe,GAAG/B;AACzBa,OAAOkB,eAAe,CAACF,WAAW,GAAG;AAErChB,OAAOmB,OAAO,GAAGlC;AACjBe,OAAOmB,OAAO,CAACH,WAAW,GAAG;AAE7BhB,OAAOZ,mBAAmB,GAAGA"}