{"version":3,"sources":["../../../../src/components/OnboardingTooltip/OnboardingTooltipContainer.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport type { HasComponent, HasDataAttribute } from '../../types';\nimport { OnboardingTooltipContext } from './OnboardingTooltipContext';\n\nexport const onboardingTooltipContainerAttr = 'data-onboarding-tooltip-container';\n\ntype OnboardingTooltipContainerProps = React.HTMLAttributes<HTMLDivElement> &\n  HasComponent &\n  HasDataAttribute & {\n    fixed?: boolean;\n  };\n\nexport const OnboardingTooltipContainer: React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<OnboardingTooltipContainerProps> & React.RefAttributes<HTMLDivElement>\n> = React.forwardRef<HTMLDivElement, OnboardingTooltipContainerProps>(\n  ({ fixed = false, Component = 'div', ...props }, ref) => {\n    const containerRef = useExternRef(ref);\n    const dataProps = {\n      [onboardingTooltipContainerAttr]: fixed ? 'fixed' : 'true',\n    };\n\n    return (\n      <OnboardingTooltipContext.Provider value={{ containerRef }}>\n        <Component {...dataProps} {...props} ref={containerRef} />\n      </OnboardingTooltipContext.Provider>\n    );\n  },\n);\n\nOnboardingTooltipContainer.displayName = 'OnboardingTooltipContainer';\n"],"names":["React","useExternRef","OnboardingTooltipContext","onboardingTooltipContainerAttr","OnboardingTooltipContainer","forwardRef","fixed","Component","props","ref","containerRef","dataProps","Provider","value","displayName"],"mappings":"AAAA;;AAEA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,YAAY,QAAQ,8BAA2B;AAExD,SAASC,wBAAwB,QAAQ,gCAA6B;AAEtE,OAAO,MAAMC,iCAAiC,oCAAoC;AAQlF,OAAO,MAAMC,2CAETJ,MAAMK,UAAU,CAClB,CAAC,EAAEC,QAAQ,KAAK,EAAEC,YAAY,KAAK,EAAE,GAAGC,OAAO,EAAEC;IAC/C,MAAMC,eAAeT,aAAaQ;IAClC,MAAME,YAAY;QAChB,CAACR,+BAA+B,EAAEG,QAAQ,UAAU;IACtD;IAEA,qBACE,KAACJ,yBAAyBU,QAAQ;QAACC,OAAO;YAAEH;QAAa;kBACvD,cAAA,KAACH;YAAW,GAAGI,SAAS;YAAG,GAAGH,KAAK;YAAEC,KAAKC;;;AAGhD,GACA;AAEFN,2BAA2BU,WAAW,GAAG"}