{"version":3,"sources":["../../../../src/components/DateInput/hooks.ts"],"sourcesContent":["import * as React from 'react';\nimport { convertDateFromTimeZone, convertDateToTimeZone } from '../../lib/date';\n\ninterface UseDateInputValueOptions {\n  value?: Date;\n  defaultValue?: Date;\n  onChange?: (value?: Date) => void;\n  timezone?: string;\n}\n\nexport interface UseDateInputValueReturn {\n  value?: Date;\n  updateValue: (v?: Date) => Date | undefined;\n  setInternalValue: (v?: Date) => void;\n  getLastUpdatedValue: () => Date | undefined;\n}\n\nconst _convertDateToTimeZone = (date?: Date, timezone?: string): Date | undefined => {\n  return convertDateToTimeZone(date, timezone) || undefined;\n};\n\nconst _convertDateFromTimeZone = (date?: Date, timezone?: string): Date | undefined => {\n  return convertDateFromTimeZone(date, timezone) || undefined;\n};\n\nconst getStateValue = (\n  defaultStateValue?: Date,\n  value?: Date,\n  defaultValue?: Date,\n  timezone?: string,\n): Date | undefined => {\n  if (value !== undefined) {\n    return _convertDateToTimeZone(value, timezone);\n  }\n  if (defaultValue !== undefined) {\n    return _convertDateToTimeZone(defaultValue, timezone);\n  }\n  return _convertDateToTimeZone(defaultStateValue, timezone);\n};\n\nexport const useDateInputValue = ({\n  value,\n  defaultValue,\n  onChange,\n  timezone,\n}: UseDateInputValueOptions): UseDateInputValueReturn => {\n  const isControlled = value !== undefined;\n\n  const [internalValue, setInternalValue] = React.useState<Date | undefined>(\n    getStateValue(undefined, value, defaultValue, timezone),\n  );\n  const lastUpdatedValueRef = React.useRef<Date | undefined>(\n    getStateValue(undefined, value, defaultValue, timezone),\n  );\n\n  React.useEffect(() => {\n    if (isControlled) {\n      setInternalValue(_convertDateToTimeZone(value, timezone));\n      lastUpdatedValueRef.current = _convertDateToTimeZone(value, timezone);\n    }\n  }, [isControlled, timezone, value]);\n\n  const getLastUpdatedValue = React.useCallback(() => lastUpdatedValueRef.current, []);\n\n  const updateValue = React.useCallback(\n    (newValue?: Date) => {\n      if (!isControlled) {\n        setInternalValue(newValue);\n        lastUpdatedValueRef.current = newValue;\n      }\n      const originalTimezoneValue = _convertDateFromTimeZone(newValue, timezone);\n      onChange?.(originalTimezoneValue);\n      return originalTimezoneValue;\n    },\n    [isControlled, onChange, timezone],\n  );\n\n  return {\n    value: internalValue,\n    updateValue,\n    setInternalValue,\n    getLastUpdatedValue,\n  };\n};\n"],"names":["React","convertDateFromTimeZone","convertDateToTimeZone","_convertDateToTimeZone","date","timezone","undefined","_convertDateFromTimeZone","getStateValue","defaultStateValue","value","defaultValue","useDateInputValue","onChange","isControlled","internalValue","setInternalValue","useState","lastUpdatedValueRef","useRef","useEffect","current","getLastUpdatedValue","useCallback","updateValue","newValue","originalTimezoneValue"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,uBAAuB,EAAEC,qBAAqB,QAAQ,oBAAiB;AAgBhF,MAAMC,yBAAyB,CAACC,MAAaC;IAC3C,OAAOH,sBAAsBE,MAAMC,aAAaC;AAClD;AAEA,MAAMC,2BAA2B,CAACH,MAAaC;IAC7C,OAAOJ,wBAAwBG,MAAMC,aAAaC;AACpD;AAEA,MAAME,gBAAgB,CACpBC,mBACAC,OACAC,cACAN;IAEA,IAAIK,UAAUJ,WAAW;QACvB,OAAOH,uBAAuBO,OAAOL;IACvC;IACA,IAAIM,iBAAiBL,WAAW;QAC9B,OAAOH,uBAAuBQ,cAAcN;IAC9C;IACA,OAAOF,uBAAuBM,mBAAmBJ;AACnD;AAEA,OAAO,MAAMO,oBAAoB,CAAC,EAChCF,KAAK,EACLC,YAAY,EACZE,QAAQ,EACRR,QAAQ,EACiB;IACzB,MAAMS,eAAeJ,UAAUJ;IAE/B,MAAM,CAACS,eAAeC,iBAAiB,GAAGhB,MAAMiB,QAAQ,CACtDT,cAAcF,WAAWI,OAAOC,cAAcN;IAEhD,MAAMa,sBAAsBlB,MAAMmB,MAAM,CACtCX,cAAcF,WAAWI,OAAOC,cAAcN;IAGhDL,MAAMoB,SAAS,CAAC;QACd,IAAIN,cAAc;YAChBE,iBAAiBb,uBAAuBO,OAAOL;YAC/Ca,oBAAoBG,OAAO,GAAGlB,uBAAuBO,OAAOL;QAC9D;IACF,GAAG;QAACS;QAAcT;QAAUK;KAAM;IAElC,MAAMY,sBAAsBtB,MAAMuB,WAAW,CAAC,IAAML,oBAAoBG,OAAO,EAAE,EAAE;IAEnF,MAAMG,cAAcxB,MAAMuB,WAAW,CACnC,CAACE;QACC,IAAI,CAACX,cAAc;YACjBE,iBAAiBS;YACjBP,oBAAoBG,OAAO,GAAGI;QAChC;QACA,MAAMC,wBAAwBnB,yBAAyBkB,UAAUpB;QACjEQ,WAAWa;QACX,OAAOA;IACT,GACA;QAACZ;QAAcD;QAAUR;KAAS;IAGpC,OAAO;QACLK,OAAOK;QACPS;QACAR;QACAM;IACF;AACF,EAAE"}