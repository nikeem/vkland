import * as React from 'react';
import { type ButtonProps } from '../Button/Button';
export type CalendarTimeTestsProps = {
    /**
     * Передает атрибут `data-testid` для дропдауна выбора часа в календаре
     */
    hoursTestId?: string;
    /**
     * Передает атрибут `data-testid` для дропдауна выбора минут в календаре
     */
    minutesTestId?: string;
    /**
     * Передает атрибут `data-testid` для кнопки "Готово" в календаре
     */
    doneButtonTestId?: string;
};
export type CalendarDoneButtonProps = {
    /**
     * Кастомное отображение кнопки Done.
     */
    DoneButton?: React.ComponentType<ButtonProps>;
    doneButtonText?: string;
    doneButtonShow?: boolean;
    doneButtonDisabled?: boolean;
    onDoneButtonClick?: () => void;
};
export interface CalendarTimeProps extends CalendarTimeTestsProps, CalendarDoneButtonProps {
    value: Date;
    changeHoursLabel?: string;
    changeMinutesLabel?: string;
    onChange?: (value: Date) => void;
    isDayDisabled?: (day: Date, withTime?: boolean) => boolean;
}
export declare const CalendarTime: ({ value, onChange, onDoneButtonClick, changeHoursLabel, changeMinutesLabel, isDayDisabled, doneButtonText, doneButtonDisabled, doneButtonShow, minutesTestId, hoursTestId, doneButtonTestId, DoneButton, }: CalendarTimeProps) => React.ReactNode;
//# sourceMappingURL=CalendarTime.d.ts.map