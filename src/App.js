import React, { useEffect, useState } from 'react';
import bridge from '@vkontakte/vk-bridge';
import {
  View,
  Panel,
  PanelHeader,
  Group,
  Button,
  Div,
  Text,
  Spinner,
} from '@vkontakte/vkui';

export const App = () => {
  const [userId, setUserId] = useState(null);
  const [loading, setLoading] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  useEffect(() => {
    bridge.send('VKWebAppInit');

    bridge
      .send('VKWebAppGetUserInfo')
      .then((data) => {
        setUserId(data.id);
        console.log('User ID –ø–æ–ª—É—á–µ–Ω:', data.id);
      })
      .catch((error) => {
        console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è user_id:', error);
      });
  }, []);

  const handleSubscribe = async () => {
    if (!userId) {
      console.warn('user_id –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω');
      return;
    }

    setLoading(true);

    try {
      // 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
      try {
        const allow = await bridge.send('VKWebAppAllowMessagesFromGroup', {
          group_id: 92756109,
        });
        console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ —É–∂–µ –±—ã–ª–æ):', allow);
      } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, desktop):', e);
      }

      // 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Senler
      const res = await fetch('https://vkland01.vercel.app/api/add-subscriber', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: userId,
          subscription_id: 3245839,
        }),
      });

      const data = await res.json();
      const result = Array.isArray(data.subscribers) ? data.subscribers[0] : null;

      console.log('üì¨ –û—Ç–≤–µ—Ç –æ—Ç Senler:', data);

      if (result?.success) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Senler!');

        // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ VK Ads
        await bridge.send('VKWebAppTrackEvent', {
          event_name: 'subscribe',
          user_id: String(userId),
        });

        setShowSuccess(true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π "–ø–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è"
      } else {
        console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Senler:', result?.error || data);
      }
    } catch (error) {
      console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    }

    setLoading(false);
  };

  const handleOpenMessages = async () => {
    const link = 'https://vk.com/im?sel=-92756109';
    try {
      const launchParams = await bridge.send('VKWebAppGetLaunchParams');
      const platform = launchParams.vk_platform;

      if (platform === 'mobile_android' || platform === 'mobile_iphone') {
        await bridge.send('VKWebAppOpenLink', { link });
      } else {
        window.location.href = link;
      }
    } catch (e) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–æ–∫:', e);
      window.location.href = link;
    }
  };

  return (
    <View activePanel="main">
      <Panel id="main">
        <PanelHeader>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</PanelHeader>
        <Group>
          <Div style={{ textAlign: 'center' }}>
            <img
              src="https://via.placeholder.com/300x150"
              alt="–ë–∞–Ω–Ω–µ—Ä"
              style={{ width: '100%', borderRadius: 12 }}
            />

            {!showSuccess ? (
              <>
                <Text weight="2" style={{ marginTop: 16, fontSize: 20 }}>
                  –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥
                </Text>
                <Text style={{ marginTop: 8 }}>
                  –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ, –∫–Ω–æ–ø–∫–∏, —Å—Å—ã–ª–∫–∏ –∏ —Ç.–ø.
                </Text>
                <Button
                  size="l"
                  stretched
                  style={{ marginTop: 16 }}
                  loading={loading}
                  disabled={loading}
                  onClick={handleSubscribe}
                >
                  {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É'}
                </Button>
              </>
            ) : (
              <>
                <Text weight="2" style={{ marginTop: 16, fontSize: 20 }}>
                  üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!
                </Text>
                <Text style={{ marginTop: 8 }}>
                  –ú—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                </Text>
                <Button
                  size="l"
                  stretched
                  style={{ marginTop: 16 }}
                  onClick={handleOpenMessages}
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
                </Button>
              </>
            )}
          </Div>
        </Group>
      </Panel>
    </View>
  );
};
