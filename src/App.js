import React, { useEffect, useState } from 'react';
import bridge from '@vkontakte/vk-bridge';
import {
  View,
  Panel,
  PanelHeader,
  Group,
  Button,
  Div,
  Text,
} from '@vkontakte/vkui';

export const App = () => {
  const [userId, setUserId] = useState(null); // ‚Üê –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

  useEffect(() => {
  console.log('üîÑ useEffect –∑–∞–ø—É—â–µ–Ω');
  bridge.send('VKWebAppInit');

  bridge.send('VKWebAppGetUserInfo')
    .then((data) => {
      console.log('‚úÖ VKWebAppGetUserInfo —É—Å–ø–µ—à–Ω–æ:', data);
      setUserId(data.id);
    })
    .catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ VKWebAppGetUserInfo:', error);
    });
}, []);

  return (
    <View activePanel="main">
      <Panel id="main">
        <PanelHeader>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</PanelHeader>
        <Group>
          <Div style={{ textAlign: 'center' }}>
            <img
              src="https://via.placeholder.com/300x150"
              alt="–ë–∞–Ω–Ω–µ—Ä"
              style={{ width: '100%', borderRadius: 12 }}
            />
            <Text weight="2" style={{ marginTop: 16, fontSize: 20 }}>
              –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥
            </Text>
            <Text style={{ marginTop: 8 }}>
              –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ, –∫–Ω–æ–ø–∫–∏, —Å—Å—ã–ª–∫–∏ –∏ —Ç.–ø.
            </Text>

            <Button
  size="l"
  stretched
  style={{ marginTop: 16 }}
  onClick={async () => {
    if (!userId) {
      console.log('user_id –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω');
      return;
    }

    try {
      const eventResult = await bridge.send('VKWebAppTrackEvent', {
        event_name: 'take_test',
        user_id: String(userId),
      });

      if (eventResult.result) {
        console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      }

      const res = await fetch('https://vkland01.vercel.app/api/add-subscriber', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: userId,
          subscription_id: 3245839, // ‚Üê —Ç–≤–æ–π ID –ø–æ–¥–ø–∏—Å–Ω–æ–π –≥—Ä—É–ø–ø—ã
        }),
      });

      const data = await res.json();
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ Senler:', data);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    }
  }}
>
  –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç
</Button>
          </Div>
        </Group>
      </Panel>
    </View>
  );
};
