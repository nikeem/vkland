import React, { useEffect, useState } from 'react';
import bridge from '@vkontakte/vk-bridge';
import {
  View,
  Panel,
  PanelHeader,
  Group,
  Button,
  Div,
  Text,
} from '@vkontakte/vkui';

export const App = () => {
  const [userId, setUserId] = useState(null); // ‚Üê –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

  useEffect(() => {
    bridge.send('VKWebAppInit');

    // –ø–æ–ª—É—á–∞–µ–º user_id –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    bridge.send('VKWebAppGetUserInfo')
      .then((data) => {
        setUserId(data.id);
        console.log('User ID –ø–æ–ª—É—á–µ–Ω:', data.id);
      })
      .catch((error) => {
        console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è user_id:', error);
      });
  }, []);

  return (
    <View activePanel="main">
      <Panel id="main">
        <PanelHeader>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</PanelHeader>
        <Group>
          <Div style={{ textAlign: 'center' }}>
            <img
              src="https://via.placeholder.com/300x150"
              alt="–ë–∞–Ω–Ω–µ—Ä"
              style={{ width: '100%', borderRadius: 12 }}
            />
            <Text weight="2" style={{ marginTop: 16, fontSize: 20 }}>
              –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥
            </Text>
            <Text style={{ marginTop: 8 }}>
              –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ, –∫–Ω–æ–ø–∫–∏, —Å—Å—ã–ª–∫–∏ –∏ —Ç.–ø.
            </Text>

<Button
  size="l"
  stretched
  style={{ marginTop: 16 }}
  onClick={async () => {
    if (!userId) {
      console.warn('user_id –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω');
      return;
    }

    try {
      // 1. –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏)
      try {
        const allow = await bridge.send('VKWebAppAllowMessagesFromGroup', {
          group_id: 92756109,
        });
        console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ —É–∂–µ –±—ã–ª–æ):', allow);
      } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, desktop):', e);
      }

      // 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Senler
      const res = await fetch('https://vkland01.vercel.app/api/add-subscriber', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: userId,
          subscription_id: 3245839,
        }),
      });

      const data = await res.json();
      console.log('üì¨ –û—Ç–≤–µ—Ç –æ—Ç Senler:', data);

      const result = data.subscribers?.[0];

      if (result?.success) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Senler!');

        // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ "subscribe"
        const eventResult = await bridge.send('VKWebAppTrackEvent', {
          event_name: 'subscribe',
          user_id: String(userId),
        });

        if (eventResult.result) {
          console.log('üìà –°–æ–±—ã—Ç–∏–µ subscribe –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        }

        // 4. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bridge.send('VKWebAppOpenLink', {
          link: 'https://vk.com/im?sel=-92756109',
        });
      } else {
        console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Senler:', result?.error);
      }
    } catch (error) {
      console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    }
  }}
>
  –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
</Button>







          </Div>
        </Group>
      </Panel>
    </View>
  );
};
